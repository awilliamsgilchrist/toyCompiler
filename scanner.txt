%{
	#include<iostream>
	#include<string>

	void flProcess(std::string type)
	{
		std::cout << type << "(" << yytext << ")" << std::endl;
	}
%}
%option noyywrap
%%

\$.* { std::cout << "Comment" << std::endl; }
"array"|"ARRAY" { flProcess("Keyword"); }
"begin"|"BEGIN" { flProcess("Keyword"); }
"chr"|"CHR" { flProcess("Keyword"); }
"const"|"CONST" { flProcess("Keyword"); }
"do"|"DO" { flProcess("Keyword"); }
"downto"|"DOWNTO" { flProcess("Keyword"); }
"else"|"ELSE" { flProcess("Keyword"); }
"elseif"|"ELSEIF" { flProcess("Keyword"); } 
"end"|"END" { flProcess("Keyword"); }
"for"|"FOR" { flProcess("Keyword"); }
"forward"|"FORWARD" { flProcess("Keyword"); }
"function"|"FUNCTION" { flProcess("Keyword"); }
"if"|"IF" { flProcess("Keyword"); }
"of"|"OF" { flProcess("Keyword"); }
"ord"|"ORD" { flProcess("Keyword"); }
"pred"|"PRED" { flProcess("Keyword"); }
"procedure"|"PROCEDURE" { flProcess("Keyword"); }
"read"|"READ" { flProcess("Keyword"); }
"record"|"RECORD" { flProcess("Keyword"); }
"ref"|"REF" { flProcess("Keyword"); }
"repeat"|"REPEAT" { flProcess("Keyword"); }
"return"|"RETURN" { flProcess("Keyword"); }
"stop"|"STOP" { flProcess("Keyword"); }
"succ"|"SUCC" { flProcess("Keyword"); }
"then"|"THEN" { flProcess("Keyword"); }
"to"|"TO" { flProcess("Keyword"); }
"type"|"TYPE" { flProcess("Keyword"); }
"until"|"UNTIL" { flProcess("Keyword"); }
"var"|"VAR" { flProcess("Keyword"); }
"while"|"WHILE" { flProcess("Keyword"); }
"write"|"WRITE" { flProcess("Keyword"); }

[a-zA-Z][a-zA-Z0-9_]* { flProcess("Identifier"); }
"+"|"-" {flProcess("Operator"); }
"*"|"/" { flProcess("Operator"); }
"&"|"|" { flProcess("Operator"); }
"'"|"=" { flProcess("Operator"); }
"<>"|"<" { flProcess("Operator"); }
"<="|">" { flProcess("Operator"); }
">="|"." { flProcess("Operator"); }
","|":" { flProcess("Operator"); }
";"|"(" { flProcess("Operator"); }
")"|"[" { flProcess("Operator"); }
"]" { flProcess("Operator"); }
":="|"%" { flProcess("Operator"); }

[1-9][0-9]* { flProcess("Int"); }
0x[0-9A-F]+ { flProcess("Int"); }
[0-7]+ {flProcess("Int"); }

'.' {flProcess("Char"); }
'\\[nrbtf]' { flProcess("Char"); }


%%

int main()
{
	yylex();
}
